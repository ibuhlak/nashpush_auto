const a0G = a0b;
(function(a, b) {
    const v = a0b
      , c = a();
    while (!![]) {
        try {
            const d = parseInt(v(0x10c)) / 0x1 + -parseInt(v(0xfb)) / 0x2 + -parseInt(v(0x14c)) / 0x3 + -parseInt(v(0x111)) / 0x4 + -parseInt(v(0xfe)) / 0x5 + -parseInt(v(0x132)) / 0x6 + parseInt(v(0x10b)) / 0x7 * (parseInt(v(0x108)) / 0x8);
            if (d === b)
                break;
            else
                c['push'](c['shift']());
        } catch (e) {
            c['push'](c['shift']());
        }
    }
}(a0a, 0x6b01b));
function a0b(a, b) {
    const c = a0a();
    return a0b = function(d, e) {
        d = d - 0xf7;
        let f = c[d];
        return f;
    }
    ,
    a0b(a, b);
}
function a0a() {
    const a3 = ['451553WbbLZh', 'subscriber_id', 'application/json', 'close', 'dropOnTheFloor', '2556432msxDhK', 'buttons', 'stringify', 'createObjectStore', 'transaction', 'then', 'waitUntil', 'subscriber_token', 'error', 'keyval', 'match', 'requireInteraction', 'log', 'Message\x20awake', 'result', 'click_action_data', 'objectStore', 'notificationclose', 'on_change', 'click_action', 'drop_on_the_floor', 'pushManager', 'message_read', 'map', 'icon', 'open', 'webpush-keyval', 'add', 'preventDefault', 'POST', 'addEventListener', 'Sending\x20message\x20awake...', 'button_', '3603024qqLjKi', 'true', 'Ping\x20message\x20received.\x20Sending\x20back\x20an\x20awake\x20callback\x20request', 'signal', '/callbacks/', 'message_id', 'reset', 'message_awake', 'put', 'readwrite', 'badge', 'development', 'ping', 'onerror', 'action', 'message', 'Dropping\x20message\x20on\x20the\x20floor!!!', 'false', 'abort', 'onsuccess', 'include', 'openWindow', 'push', 'keys', 'vibrationPattern', 'showNotification', '2473716qvQhhh', 'title', 'click_actions', 'null', 'toJSON', 'data', 'some', 'registration', 'https://callbacks-api.staging.push-sender.com/api/v1/subscribers/', 'notification', 'oncomplete', 'url', 'string', 'readonly', '1128090AJWIJN', 'management', 'all', '3810070AXfIBQ', 'url_redirect', 'json', 'cache', 'parse', 'channel_id', 'p256dh', 'message_clicked', 'notificationclick', 'body', '2455992VUfOja', 'getTime', 'text/plain', '77zwpUYI'];
    a0a = function() {
        return a3;
    }
    ;
    return a0a();
}
const a0c = (( () => {
    let a;
    function b() {
        return !a && (a = new Promise( (d, e) => {
            const w = a0b
              , f = indexedDB[w(0x12a)](w(0x12b), 0x1);
            f[w(0x13f)] = () => {
                const x = w;
                e(f[x(0x119)]);
            }
            ,
            f['onupgradeneeded'] = () => {
                const y = w;
                f[y(0x11f)][y(0x114)]('keyval');
            }
            ,
            f[w(0x145)] = () => {
                d(f['result']);
            }
            ;
        }
        )),
        a;
    }
    function c(d, e) {
        const z = a0b;
        return b()[z(0x116)](f => {
            return new Promise( (g, h) => {
                const A = a0b;
                try {
                    const i = f[A(0x115)](A(0x11a), d);
                    i[A(0xf7)] = () => g(),
                    i[A(0x13f)] = () => h(i['error']),
                    e(i[A(0x121)](A(0x11a)));
                } catch (j) {
                    g();
                }
            }
            );
        }
        );
    }
    return {
        'get'(d) {
            const B = a0b;
            let e;
            return c(B(0xfa), f => {
                e = f['get'](d);
            }
            )[B(0x116)]( () => {
                const C = B;
                return e[C(0x11f)];
            }
            );
        },
        'push'(d) {
            const D = a0b;
            return c(D(0x13b), e => {
                const E = D;
                e[E(0x12c)](d);
            }
            )[D(0x116)]( () => {
                return !![];
            }
            );
        }
    };
}
)())
  , a0d = (a, b) => {
    const F = a0b;
    return fetch(F(0x154), {
        'method': F(0x12e),
        'body': JSON[F(0x113)]({
            'created_type': F(0x123),
            'from_url': null,
            'fingerprint': null,
            'browser_language': null,
            'subscription': {
                'auth': b[F(0x149)]['auth'],
                'p256dh': b[F(0x149)][F(0x104)],
                'endpoint': b['endpoint']
            }
        }),
        'headers': {
            'content-type': F(0x10e),
            'Channel-Token': a
        },
        'credentials': F(0x146)
    });
}
;
self['addEventListener'](a0G(0x141), a => {
    const H = a0G
      , b = a['data'];
    let c;
    if (b === H(0x110))
        c = caches[H(0x12a)]('v1')[H(0x116)](d => d['put']('management', new Response(JSON[H(0x113)]({
            'drop_on_the_floor': H(0x133)
        }),{
            'status': 0xc8,
            'headers': {
                'Content-Type': H(0x10e)
            }
        })));
    else
        b === H(0x138) && (c = caches['open']('v1')[H(0x116)](d => d[H(0x13a)](H(0xfc), new Response(JSON[H(0x113)]({
            'drop_on_the_floor': H(0x143)
        }),{
            'status': 0xc8,
            'headers': {
                'Content-Type': H(0x10e)
            }
        }))));
    c && a[H(0x117)](c);
}
),
self[a0G(0x12f)]('push', function(a) {
    const I = a0G
      , b = I(0x13d)
      , c = a[I(0x151)]['text']()
      , d = JSON[I(0x102)](c)
      , e = d[I(0x155)];
    let f = e[I(0x151)];
    !f && (f = d[I(0x151)]);
    const g = f[I(0x13e)] === 'true';
    let h = e['actions'];
    !h && !g && (h = JSON['parse'](f[I(0x112)]));
    function i() {
        const J = I;
        return console[J(0x11d)](J(0x134)),
        fetch(J(0x154) + f[J(0x10d)] + J(0x136), {
            'method': J(0x12e),
            'body': JSON[J(0x113)]({
                'type': J(0x139),
                'token': f[J(0x118)],
                'data': {
                    'message_id': f[J(0x137)]
                }
            }),
            'headers': {
                'content-type': J(0x10a)
            }
        })[J(0x116)]( () => {
            const K = J;
            console[K(0x11d)]('Message\x20awake');
        }
        );
    }
    function j() {
        const L = I;
        return fetch(L(0x154) + f[L(0x10d)] + L(0x136), {
            'method': L(0x12e),
            'body': JSON['stringify']({
                'type': L(0x127),
                'token': f[L(0x118)],
                'data': {
                    'message_id': f[L(0x137)]
                }
            }),
            'headers': {
                'content-type': L(0x10a)
            }
        });
    }
    function k() {
        const M = I;
        return caches[M(0x12a)]('v1')[M(0x116)](q => {
            const N = M;
            return q[N(0x11b)](N(0x101))[N(0x116)](r => {
                const O = N;
                if (!r) {
                    console[O(0x11d)]('Cache\x20is\x20empty,\x20no\x20last\x20delivery\x20time\x20mark\x20is\x20available.');
                    return;
                }
                r[O(0x100)]()[O(0x116)](s => {
                    const P = O;
                    let t = parseInt(s['last_delivery']);
                    if (isNaN(t)) {
                        console[P(0x11d)]('Could\x20not\x20fetch\x20last\x20delivery\x20time.');
                        return;
                    }
                    console[P(0x11d)](t),
                    t && new Date()[P(0x109)]() - t >= parseInt('60') * 0x3e8 && (console[P(0x11d)](P(0x130)),
                    fetch('https://callbacks-api.staging.push-sender.com/api/v1/subscribers/' + f[P(0x10d)] + P(0x136), {
                        'method': 'POST',
                        'body': JSON[P(0x113)]({
                            'type': P(0x139),
                            'token': f[P(0x118)],
                            'data': {
                                'message_id': f[P(0x137)]
                            }
                        }),
                        'headers': {
                            'content-type': P(0x10a)
                        }
                    })[P(0x116)]( () => {
                        const Q = P;
                        console[Q(0x11d)](Q(0x11e));
                    }
                    ));
                }
                );
            }
            );
        }
        );
    }
    function l() {
        const R = I;
        return caches[R(0x12a)]('v1')[R(0x116)](q => q[R(0x13a)](R(0x101), new Response(JSON[R(0x113)]({
            'last_delivery': new Date()[R(0x109)]()
        }),{
            'status': 0xc8,
            'headers': {
                'Content-Type': R(0x10e)
            }
        })));
    }
    function m() {
        const S = I;
        let q = {
            'body': e[S(0x107)],
            'icon': e[S(0x129)],
            'image': e['image'],
            'actions': h,
            'tag': e['tag'],
            'renotify': !![],
            'requireInteraction': e[S(0x11c)],
            'vibrate': e[S(0x14a)] ? JSON[S(0x102)](e[S(0x14a)]) : null,
            'data': f
        };
        typeof e[S(0x13c)] === S(0xf9) && !e[S(0x13c)]['includes'](S(0x14f)) && (q[S(0x13c)] = e[S(0x13c)]),
        self[S(0x153)][S(0x14b)](e['title'], q);
    }
    let n;
    b === I(0x13d) ? n = new Promise(function(q, r) {
        const T = I;
        caches[T(0x12a)]('v1')['then'](s => {
            const U = T;
            s[U(0x11b)](U(0xfc))[U(0x116)](t => {
                !t ? q({}) : t['json']()['then'](u => {
                    q(u);
                }
                );
            }
            );
        }
        );
    }
    ) : n = null;
    let o, p;
    !g ? o = [m, j, k, l] : o = [i],
    n !== null ? a['waitUntil'](n[I(0x116)](q => {
        const V = I;
        if (q[V(0x125)] === V(0x133)) {
            console[V(0x11d)](V(0x142));
            return;
        }
        p = o[V(0x128)](r => r()),
        Promise['all'](p);
    }
    )) : (p = o[I(0x128)](q => q()),
    a[I(0x117)](Promise[I(0xfd)](p)));
}),
self['addEventListener'](a0G(0x106), function(a) {
    const W = a0G;
    a[W(0x12d)]();
    const b = a['notification'];
    let c = b[W(0x151)]
      , d = null;
    typeof c['click_actions'] === 'string' && (c[W(0x14e)] = JSON[W(0x102)](c[W(0x14e)]));
    let e = [];
    if (!a[W(0x140)] && c[W(0xf8)] !== undefined)
        e[W(0x148)](clients[W(0x147)](c['url'])),
        d = null;
    else {
        if (!a[W(0x140)])
            c[W(0x14e)][W(0x152)](function(h) {
                const X = W;
                if (!h[X(0x14d)] && (h[X(0x124)] === X(0xf8) || h[X(0x124)] === X(0xff)))
                    return e[X(0x148)](clients[X(0x147)](h[X(0x120)])),
                    d = h[X(0x140)],
                    !![];
            });
        else
            a[W(0x140)] && c[W(0x131) + a['action']] !== undefined ? (e[W(0x148)](clients[W(0x147)](c[W(0x131) + a[W(0x140)]])),
            d = a[W(0x140)]) : c[W(0x14e)]['some'](function(h) {
                const Y = W;
                if ((h[Y(0x124)] === 'url' || h['click_action'] === 'url_redirect') && String(h[Y(0x140)]) === String(a[Y(0x140)]))
                    return e[Y(0x148)](clients[Y(0x147)](h[Y(0x120)])),
                    d = h['action'],
                    !![];
            });
    }
    const f = fetch(W(0x154) + c[W(0x10d)] + W(0x136), {
        'method': W(0x12e),
        'body': JSON['stringify']({
            'type': W(0x105),
            'token': c['subscriber_token'],
            'data': {
                'message_id': c[W(0x137)],
                'action_id': d
            }
        }),
        'headers': {
            'content-type': W(0x10a)
        }
    });
    e['push'](f);
    const g = Promise['all'](e);
    a[W(0x117)](g),
    b[W(0x10f)]();
}),
self[a0G(0x12f)](a0G(0x122), function(a) {
    const Z = a0G;
    a[Z(0x12d)]();
    const b = a['notification'];
    b[Z(0x10f)]();
    const c = b[Z(0x151)];
    !c && (c = data[Z(0x151)]);
    const d = new AbortController();
    setTimeout( () => d[Z(0x144)](), 0xc8);
    const e = fetch(Z(0x154) + c[Z(0x10d)] + Z(0x136), {
        'method': 'POST',
        'body': JSON[Z(0x113)]({
            'type': 'message_closed',
            'token': c[Z(0x118)],
            'data': {
                'message_id': c['message_id']
            }
        }),
        'headers': {
            'content-type': Z(0x10a)
        },
        'signal': d[Z(0x135)]
    })
      , f = Promise[Z(0xfd)]([e]);
    a['waitUntil'](f);
}),
self[a0G(0x12f)]('pushsubscriptionchange', a => {
    const a0 = a0G;
    a[a0(0x117)](self[a0(0x153)][a0(0x126)]['getSubscription']()[a0(0x116)](b => {
        const a1 = a0;
        a0c['get'](a1(0x103))[a1(0x116)](c => {
            const a2 = a1;
            return a0d(c, b[a2(0x150)]());
        }
        );
    }
    ));
}
, ![]);
