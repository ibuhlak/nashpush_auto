function a0b(a, b) {
    const c = a0a();
    return a0b = function(d, e) {
        d = d - 0x108;
        let f = c[d];
        return f;
    }
    ,
    a0b(a, b);
}
const a0I = a0b;
(function(a, b) {
    const v = a0b
      , c = a();
    while (!![]) {
        try {
            const d = -parseInt(v(0x168)) / 0x1 * (-parseInt(v(0x112)) / 0x2) + -parseInt(v(0x118)) / 0x3 * (-parseInt(v(0x13e)) / 0x4) + -parseInt(v(0x159)) / 0x5 * (-parseInt(v(0x119)) / 0x6) + -parseInt(v(0x147)) / 0x7 * (parseInt(v(0x134)) / 0x8) + parseInt(v(0x137)) / 0x9 + -parseInt(v(0x11b)) / 0xa + parseInt(v(0x11f)) / 0xb * (-parseInt(v(0x155)) / 0xc);
            if (d === b)
                break;
            else
                c['push'](c['shift']());
        } catch (e) {
            c['push'](c['shift']());
        }
    }
}(a0a, 0xa073b));
function a0a() {
    const a5 = ['2444760ADLHtb', 'registration', 'click_action_data', 'notificationclose', '2122549CnvtiJ', 'onsuccess', 'open', 'waitUntil', 'message_awake', 'false', 'action', 'icon', 'requireInteraction', 'management', 'null', 'p256dh', 'on_change', 'readonly', 'result', 'click_action', 'body', 'reset', 'button_', 'push', 'image', '56tqMwCS', 'error', 'Could\x20not\x20fetch\x20last\x20delivery\x20time.', '11032956biTRzR', 'endpoint', '/callbacks/', 'get', 'message_read', 'development', 'keyval', '4UqmZnx', 'cache', 'text/plain', 'onerror', 'dropOnTheFloor', 'badge', 'title', 'Ping\x20message\x20received.\x20Sending\x20back\x20an\x20awake\x20callback\x20request', 'message', '813421wSWhHR', 'openWindow', 'subscriber_token', 'Message\x20awake', 'vibrationPattern', 'getTime', 'subscriber_id', 'onupgradeneeded', 'notification', 'close', 'url', 'log', 'keys', 'pushManager', '12CPRHPW', 'Push\x20event\x20received:', 'channel_id', 'add', '57865mtHgVe', 'addEventListener', 'POST', 'stringify', 'auth', 'readwrite', 'click_actions', 'parse', 'objectStore', 'put', 'map', 'data', 'application/json', 'preventDefault', 'message_clicked', '1509cOoVjG', 'then', 'tag', 'string', 'some', 'https://callbacks-api.staging.push-sender.com/api/v1/subscribers/', 'match', 'oncomplete', 'showNotification', 'json', 'message_closed', '482ytbCUJ', 'url_redirect', 'abort', 'message_id', 'ping', 'getSubscription', '920823UOElZS', '6mZDrhN', 'last_delivery'];
    a0a = function() {
        return a5;
    }
    ;
    return a0a();
}
const a0c = (( () => {
    let a;
    function b() {
        return !a && (a = new Promise( (d, e) => {
            const w = a0b
              , f = indexedDB[w(0x121)]('webpush-keyval', 0x1);
            f[w(0x141)] = () => {
                const x = w;
                e(f[x(0x135)]);
            }
            ,
            f[w(0x14e)] = () => {
                const y = w;
                f[y(0x12d)]['createObjectStore'](y(0x13d));
            }
            ,
            f[w(0x120)] = () => {
                const z = w;
                d(f[z(0x12d)]);
            }
            ;
        }
        )),
        a;
    }
    function c(d, e) {
        const A = a0b;
        return b()[A(0x108)](f => {
            return new Promise( (g, h) => {
                const B = a0b;
                try {
                    const i = f['transaction'](B(0x13d), d);
                    i[B(0x10e)] = () => g(),
                    i[B(0x141)] = () => h(i[B(0x135)]),
                    e(i[B(0x161)](B(0x13d)));
                } catch (j) {
                    g();
                }
            }
            );
        }
        );
    }
    return {
        'get'(d) {
            const C = a0b;
            let e;
            return c(C(0x12c), f => {
                const D = C;
                e = f[D(0x13a)](d);
            }
            )[C(0x108)]( () => {
                const E = C;
                return e[E(0x12d)];
            }
            );
        },
        'push'(d) {
            const F = a0b;
            return c(F(0x15e), e => {
                const G = F;
                e[G(0x158)](d);
            }
            )['then']( () => {
                return !![];
            }
            );
        }
    };
}
)())
  , a0d = (a, b) => {
    const H = a0b;
    return fetch(H(0x10c), {
        'method': H(0x15b),
        'body': JSON[H(0x15c)]({
            'created_type': H(0x12b),
            'from_url': null,
            'fingerprint': null,
            'browser_language': null,
            'subscription': {
                'auth': b[H(0x153)][H(0x15d)],
                'p256dh': b[H(0x153)][H(0x12a)],
                'endpoint': b[H(0x138)]
            }
        }),
        'headers': {
            'content-type': H(0x165),
            'Channel-Token': a
        },
        'credentials': 'include'
    });
}
;
self['addEventListener'](a0I(0x146), a => {
    const J = a0I
      , b = a[J(0x164)];
    let c;
    if (b === J(0x142))
        c = caches['open']('v1')['then'](d => d['put'](J(0x128), new Response(JSON['stringify']({
            'drop_on_the_floor': 'true'
        }),{
            'status': 0xc8,
            'headers': {
                'Content-Type': J(0x165)
            }
        })));
    else
        b === J(0x130) && (c = caches['open']('v1')[J(0x108)](d => d[J(0x162)](J(0x128), new Response(JSON[J(0x15c)]({
            'drop_on_the_floor': J(0x124)
        }),{
            'status': 0xc8,
            'headers': {
                'Content-Type': J(0x165)
            }
        }))));
    c && a[J(0x122)](c);
}
),
self[a0I(0x15a)](a0I(0x132), function(a) {
    const K = a0I
      , b = K(0x13c)
      , c = a['data']['text']()
      , d = JSON['parse'](c);
    b === K(0x13c) && console['log'](K(0x156), d);
    const e = d[K(0x14f)];
    let f = e[K(0x164)];
    !f && (f = d['data']);
    const g = f[K(0x116)] === 'true';
    let h = e['actions'];
    !h && !g && (h = JSON[K(0x160)](f['buttons']));
    function i() {
        const L = K;
        return console['log'](L(0x145)),
        fetch(L(0x10c) + f[L(0x14d)] + '/callbacks/', {
            'method': L(0x15b),
            'body': JSON[L(0x15c)]({
                'type': L(0x123),
                'token': f[L(0x149)],
                'data': {
                    'message_id': f['message_id']
                }
            }),
            'headers': {
                'content-type': L(0x140)
            }
        })[L(0x108)]( () => {
            const M = L;
            console['log'](M(0x14a));
        }
        );
    }
    function j() {
        const N = K;
        return fetch(N(0x10c) + f[N(0x14d)] + N(0x139), {
            'method': N(0x15b),
            'body': JSON[N(0x15c)]({
                'type': N(0x13b),
                'token': f[N(0x149)],
                'data': {
                    'message_id': f[N(0x115)]
                }
            }),
            'headers': {
                'content-type': N(0x140)
            }
        });
    }
    function k() {
        const O = K;
        return caches[O(0x121)]('v1')[O(0x108)](q => {
            const P = O;
            return q[P(0x10d)](P(0x13f))[P(0x108)](r => {
                const Q = P;
                if (!r) {
                    console[Q(0x152)]('Cache\x20is\x20empty,\x20no\x20last\x20delivery\x20time\x20mark\x20is\x20available.');
                    return;
                }
                r[Q(0x110)]()[Q(0x108)](s => {
                    const R = Q;
                    let t = parseInt(s[R(0x11a)]);
                    if (isNaN(t)) {
                        console[R(0x152)](R(0x136));
                        return;
                    }
                    console['log'](t),
                    t && new Date()['getTime']() - t >= parseInt('60') * 0x3e8 && (console[R(0x152)]('Sending\x20message\x20awake...'),
                    fetch(R(0x10c) + f[R(0x14d)] + R(0x139), {
                        'method': 'POST',
                        'body': JSON[R(0x15c)]({
                            'type': R(0x123),
                            'token': f[R(0x149)],
                            'data': {
                                'message_id': f['message_id']
                            }
                        }),
                        'headers': {
                            'content-type': R(0x140)
                        }
                    })[R(0x108)]( () => {
                        const S = R;
                        console[S(0x152)]('Message\x20awake');
                    }
                    ));
                }
                );
            }
            );
        }
        );
    }
    function l() {
        const T = K;
        return caches['open']('v1')[T(0x108)](q => q['put']('cache', new Response(JSON[T(0x15c)]({
            'last_delivery': new Date()[T(0x14c)]()
        }),{
            'status': 0xc8,
            'headers': {
                'Content-Type': 'application/json'
            }
        })));
    }
    function m() {
        const U = K;
        let q = {
            'body': e[U(0x12f)],
            'icon': e[U(0x126)],
            'image': e[U(0x133)],
            'actions': h,
            'tag': e[U(0x109)],
            'renotify': !![],
            'requireInteraction': e[U(0x127)],
            'vibrate': e[U(0x14b)] ? JSON[U(0x160)](e['vibrationPattern']) : null,
            'data': f
        };
        typeof e[U(0x143)] === U(0x10a) && !e[U(0x143)]['includes'](U(0x129)) && (q[U(0x143)] = e['badge']),
        self['registration'][U(0x10f)](e[U(0x144)], q);
    }
    let n;
    b === K(0x13c) ? n = new Promise(function(q, r) {
        const V = K;
        caches[V(0x121)]('v1')[V(0x108)](s => {
            const W = V;
            s[W(0x10d)](W(0x128))[W(0x108)](t => {
                const X = W;
                !t ? q({}) : t[X(0x110)]()[X(0x108)](u => {
                    q(u);
                }
                );
            }
            );
        }
        );
    }
    ) : n = null;
    let o, p;
    !g ? o = [m, j, k, l] : o = [i],
    n !== null ? a[K(0x122)](n[K(0x108)](q => {
        const Y = K;
        if (q['drop_on_the_floor'] === 'true') {
            console[Y(0x152)]('Dropping\x20message\x20on\x20the\x20floor!!!');
            return;
        }
        p = o[Y(0x163)](r => r()),
        Promise['all'](p);
    }
    )) : (p = o[K(0x163)](q => q()),
    a[K(0x122)](Promise['all'](p)));
}),
self[a0I(0x15a)]('notificationclick', function(a) {
    const Z = a0I;
    a[Z(0x166)]();
    const b = a[Z(0x14f)];
    let c = b['data']
      , d = null;
    typeof c[Z(0x15f)] === Z(0x10a) && (c[Z(0x15f)] = JSON['parse'](c[Z(0x15f)]));
    let e = [];
    if (!a[Z(0x125)] && c['url'] !== undefined)
        e['push'](clients['openWindow'](c[Z(0x151)])),
        d = null;
    else {
        if (!a[Z(0x125)])
            c['click_actions'][Z(0x10b)](function(h) {
                const a0 = Z;
                if (!h['title'] && (h[a0(0x12e)] === a0(0x151) || h[a0(0x12e)] === a0(0x113)))
                    return e[a0(0x132)](clients['openWindow'](h[a0(0x11d)])),
                    d = h[a0(0x125)],
                    !![];
            });
        else
            a[Z(0x125)] && c['button_' + a[Z(0x125)]] !== undefined ? (e['push'](clients['openWindow'](c[Z(0x131) + a[Z(0x125)]])),
            d = a[Z(0x125)]) : c[Z(0x15f)]['some'](function(h) {
                const a1 = Z;
                if ((h[a1(0x12e)] === 'url' || h[a1(0x12e)] === a1(0x113)) && String(h[a1(0x125)]) === String(a[a1(0x125)]))
                    return e['push'](clients[a1(0x148)](h['click_action_data'])),
                    d = h[a1(0x125)],
                    !![];
            });
    }
    const f = fetch(Z(0x10c) + c['subscriber_id'] + Z(0x139), {
        'method': 'POST',
        'body': JSON[Z(0x15c)]({
            'type': Z(0x167),
            'token': c[Z(0x149)],
            'data': {
                'message_id': c[Z(0x115)],
                'action_id': d
            }
        }),
        'headers': {
            'content-type': Z(0x140)
        }
    });
    e['push'](f);
    const g = Promise['all'](e);
    a[Z(0x122)](g),
    b[Z(0x150)]();
}),
self[a0I(0x15a)](a0I(0x11e), function(a) {
    const a2 = a0I;
    a[a2(0x166)]();
    const b = a[a2(0x14f)];
    b[a2(0x150)]();
    const c = b[a2(0x164)];
    !c && (c = data[a2(0x164)]);
    const d = new AbortController();
    setTimeout( () => d[a2(0x114)](), 0xc8);
    const e = fetch(a2(0x10c) + c[a2(0x14d)] + '/callbacks/', {
        'method': a2(0x15b),
        'body': JSON['stringify']({
            'type': a2(0x111),
            'token': c[a2(0x149)],
            'data': {
                'message_id': c[a2(0x115)]
            }
        }),
        'headers': {
            'content-type': 'text/plain'
        },
        'signal': d['signal']
    })
      , f = Promise['all']([e]);
    a[a2(0x122)](f);
}),
self['addEventListener']('pushsubscriptionchange', a => {
    const a3 = a0I;
    a[a3(0x122)](self[a3(0x11c)][a3(0x154)][a3(0x117)]()[a3(0x108)](b => {
        const a4 = a3;
        a0c[a4(0x13a)](a4(0x157))[a4(0x108)](c => {
            return a0d(c, b['toJSON']());
        }
        );
    }
    ));
}
, ![]);
